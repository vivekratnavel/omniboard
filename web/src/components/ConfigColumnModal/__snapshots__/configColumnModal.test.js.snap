// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigColumnModal should render correctly 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Manage Config Columns
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      style={
        Object {
          "paddingBottom": "15px",
        }
      }
    >
      Add Column to expand any nested config parameter into a new column
    </div>
    <ProgressWrapper
      loading={true}
    >
      <div>
        <form />
      </div>
    </ProgressWrapper>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsSize="small"
        bsStyle="info"
        disabled={false}
        onClick={[Function]}
        test-attr="add-column-btn"
      >
        <span
          aria-hidden="true"
          className="glyphicon glyphicon-plus"
        />
         Add Column
      </Button>
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[MockFunction]}
      test-attr="close-btn"
    >
      Close
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      onClick={[Function]}
      test-attr="apply-btn"
    >
      <span>
        Apply
      </span>
    </Button>
  </ModalFooter>
</Modal>
`;

exports[`ConfigColumnModal should render correctly 2`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h4"
    >
      Manage Config Columns
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <div
      style={
        Object {
          "paddingBottom": "15px",
        }
      }
    >
      Add Column to expand any nested config parameter into a new column
    </div>
    <ProgressWrapper
      loading={false}
    >
      <div>
        <form>
          <div
            className="row"
            key="0"
          >
            <div
              className="col col-xs-5"
            >
              <FormGroup
                bsClass="form-group"
                controlId="formColumnName"
                validationState="success"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Enter column name"
                  test-attr="column-name-text-0"
                  type="text"
                  value="batch_size"
                />
              </FormGroup>
            </div>
            <div
              className="col col-xs-5"
            >
              <StateManager
                clearable={false}
                defaultInputValue=""
                defaultMenuIsOpen={false}
                defaultValue={null}
                isLoading={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "train.batch_size",
                      "value": "train.batch_size",
                    },
                    Object {
                      "label": "train.epochs",
                      "value": "train.epochs",
                    },
                    Object {
                      "label": "train.lr",
                      "value": "train.lr",
                    },
                    Object {
                      "label": "train.settings.epochs",
                      "value": "train.settings.epochs",
                    },
                  ]
                }
                placeholder="Config Path"
                test-attr="config-path-0"
                value={
                  Object {
                    "label": "train.batch_size",
                    "value": "train.batch_size",
                  }
                }
              />
            </div>
            <div
              className="col col-xs-2"
            >
              <i
                className="glyphicon glyphicon-remove delete-icon"
                onClick={[Function]}
                test-attr="delete-0"
              />
            </div>
          </div>
          <div
            className="row"
            key="1"
          >
            <div
              className="col col-xs-5"
            >
              <FormGroup
                bsClass="form-group"
                controlId="formColumnName"
                validationState="success"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Enter column name"
                  test-attr="column-name-text-1"
                  type="text"
                  value="settings_epochs"
                />
              </FormGroup>
            </div>
            <div
              className="col col-xs-5"
            >
              <StateManager
                clearable={false}
                defaultInputValue=""
                defaultMenuIsOpen={false}
                defaultValue={null}
                isLoading={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "train.batch_size",
                      "value": "train.batch_size",
                    },
                    Object {
                      "label": "train.epochs",
                      "value": "train.epochs",
                    },
                    Object {
                      "label": "train.lr",
                      "value": "train.lr",
                    },
                    Object {
                      "label": "train.settings.epochs",
                      "value": "train.settings.epochs",
                    },
                  ]
                }
                placeholder="Config Path"
                test-attr="config-path-1"
                value={
                  Object {
                    "label": "train.settings.epochs",
                    "value": "train.settings.epochs",
                  }
                }
              />
            </div>
            <div
              className="col col-xs-2"
            >
              <i
                className="glyphicon glyphicon-remove delete-icon"
                onClick={[Function]}
                test-attr="delete-1"
              />
            </div>
          </div>
          <div
            className="row"
            key="2"
          >
            <div
              className="col col-xs-5"
            >
              <FormGroup
                bsClass="form-group"
                controlId="formColumnName"
                validationState="success"
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  placeholder="Enter column name"
                  test-attr="column-name-text-2"
                  type="text"
                  value="Lr"
                />
              </FormGroup>
            </div>
            <div
              className="col col-xs-5"
            >
              <StateManager
                clearable={false}
                defaultInputValue=""
                defaultMenuIsOpen={false}
                defaultValue={null}
                isLoading={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "train.batch_size",
                      "value": "train.batch_size",
                    },
                    Object {
                      "label": "train.epochs",
                      "value": "train.epochs",
                    },
                    Object {
                      "label": "train.lr",
                      "value": "train.lr",
                    },
                    Object {
                      "label": "train.settings.epochs",
                      "value": "train.settings.epochs",
                    },
                  ]
                }
                placeholder="Config Path"
                test-attr="config-path-2"
                value={
                  Object {
                    "label": "train.lr",
                    "value": "train.lr",
                  }
                }
              />
            </div>
            <div
              className="col col-xs-2"
            >
              <i
                className="glyphicon glyphicon-remove delete-icon"
                onClick={[Function]}
                test-attr="delete-2"
              />
            </div>
          </div>
        </form>
      </div>
    </ProgressWrapper>
    <div>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsSize="small"
        bsStyle="info"
        disabled={false}
        onClick={[Function]}
        test-attr="add-column-btn"
      >
        <span
          aria-hidden="true"
          className="glyphicon glyphicon-plus"
        />
         Add Column
      </Button>
    </div>
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[MockFunction]}
      test-attr="close-btn"
    >
      Close
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={true}
      onClick={[Function]}
      test-attr="apply-btn"
    >
      <span>
        Apply
      </span>
    </Button>
  </ModalFooter>
</Modal>
`;
